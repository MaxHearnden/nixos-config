From cdd4cce73507ce9bc533adf48749ad7ead02332f Mon Sep 17 00:00:00 2001
From: MaxHearnden <maxoscarhearnden@gmail.com>
Date: Sun, 23 Apr 2023 23:24:42 +0100
Subject: [PATCH] add seperate error handling

---
 src/libstore/build/derivation-goal.cc       |  6 ++++++
 src/libstore/build/derivation-goal.hh       |  1 +
 src/libstore/build/local-derivation-goal.cc | 11 +++++++++--
 src/libstore/build/local-derivation-goal.hh |  1 +
 4 files changed, 17 insertions(+), 2 deletions(-)

diff --git a/src/libstore/build/derivation-goal.cc b/src/libstore/build/derivation-goal.cc
index 38b73d53159..8c51989c7e8 100644
--- a/src/libstore/build/derivation-goal.cc
+++ b/src/libstore/build/derivation-goal.cc
@@ -786,6 +786,11 @@ bool DerivationGoal::cleanupDecideWhetherDiskFull()
 }
 
 
+void DerivationGoal::cleanupError()
+{
+}
+
+
 void DerivationGoal::cleanupPostOutputsRegisteredModeCheck()
 {
 }
@@ -947,6 +952,7 @@ void DerivationGoal::buildDone()
         done(BuildResult::Built, std::move(builtOutputs));
 
     } catch (BuildError & e) {
+        cleanupError();
         outputLocks.unlock();
 
         BuildResult::Status st = BuildResult::MiscFailure;
diff --git a/src/libstore/build/derivation-goal.hh b/src/libstore/build/derivation-goal.hh
index 707e38b4bc0..c18af7c9592 100644
--- a/src/libstore/build/derivation-goal.hh
+++ b/src/libstore/build/derivation-goal.hh
@@ -187,6 +187,7 @@ struct DerivationGoal : public Goal
     virtual bool cleanupDecideWhetherDiskFull();
     virtual void cleanupPostOutputsRegisteredModeCheck();
     virtual void cleanupPostOutputsRegisteredModeNonCheck();
+    virtual void cleanupError();
 
     virtual bool isReadDesc(int fd);
 
diff --git a/src/libstore/build/local-derivation-goal.cc b/src/libstore/build/local-derivation-goal.cc
index 6fb9b86e057..5ba5d62f48f 100644
--- a/src/libstore/build/local-derivation-goal.cc
+++ b/src/libstore/build/local-derivation-goal.cc
@@ -349,6 +349,12 @@ bool LocalDerivationGoal::cleanupDecideWhetherDiskFull()
     }
 #endif
 
+    return diskFull;
+}
+
+
+void LocalDerivationGoal::cleanupError()
+{
     deleteTmpDir(false);
 
     /* Move paths out of the chroot for easier debugging of
@@ -361,8 +367,6 @@ bool LocalDerivationGoal::cleanupDecideWhetherDiskFull()
             if (pathExists(chrootRootDir + p))
                 renameFile((chrootRootDir + p), p);
         }
-
-    return diskFull;
 }
 
 
@@ -2323,6 +2327,9 @@ DrvOutputs LocalDerivationGoal::registerOutputs()
             }, *orifu);
         }},
         {[&](const std::string & path, const std::string & parent) {
+            // as the result is cast to an Error, the handler for BuildErrors is not run
+            // this will move paths out of a chroot directory
+            cleanupError();
             // TODO with more -vvvv also show the temporary paths for manual inspection.
             return BuildError(
                 "cycle detected in build of '%s' in the references of output '%s' from output '%s'",
diff --git a/src/libstore/build/local-derivation-goal.hh b/src/libstore/build/local-derivation-goal.hh
index 34c4e9187ba..0421b7bfede 100644
--- a/src/libstore/build/local-derivation-goal.hh
+++ b/src/libstore/build/local-derivation-goal.hh
@@ -191,6 +191,7 @@ struct LocalDerivationGoal : public DerivationGoal
     bool cleanupDecideWhetherDiskFull() override;
     void cleanupPostOutputsRegisteredModeCheck() override;
     void cleanupPostOutputsRegisteredModeNonCheck() override;
+    void cleanupError() override;
 
     bool isReadDesc(int fd) override;
 

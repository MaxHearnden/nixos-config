diff --git a/fs/nfs/write.c b/fs/nfs/write.c
index 75c1b3c7faea..0052808e4bf1 100644
--- a/fs/nfs/write.c
+++ b/fs/nfs/write.c
@@ -174,6 +174,7 @@ nfs_cancel_remove_inode(struct nfs_page *req, struct inode *inode)
 
 static struct nfs_page *nfs_folio_private_request(struct folio *folio)
 {
+	pr_info("%s: %p\n", __func__, folio);
 	return folio_get_private(folio);
 }
 
@@ -189,11 +190,13 @@ static struct nfs_page *nfs_folio_find_private_request(struct folio *folio)
 {
 	struct address_space *mapping = folio_file_mapping(folio);
 	struct nfs_page *req;
+	pr_info("%s: %p\n", __func__, folio);
 
 	if (!folio_test_private(folio))
 		return NULL;
 	spin_lock(&mapping->i_private_lock);
 	req = nfs_folio_private_request(folio);
+	pr_info("%s: req: %p\n", __func__, req);
 	if (req) {
 		WARN_ON_ONCE(req->wb_head != req);
 		kref_get(&req->wb_kref);
@@ -240,6 +243,7 @@ static struct nfs_page *nfs_folio_find_head_request(struct folio *folio)
 
 static struct nfs_page *nfs_folio_find_and_lock_request(struct folio *folio)
 {
+	pr_info("%s: %p\n", __func__, folio);
 	struct inode *inode = folio_file_mapping(folio)->host;
 	struct nfs_page *req, *head;
 	int ret;
@@ -565,6 +569,7 @@ void nfs_join_page_group(struct nfs_page *head, struct nfs_commit_info *cinfo,
  */
 static struct nfs_page *nfs_lock_and_join_requests(struct folio *folio)
 {
+	pr_info("%s: %p\n", __func__, folio);
 	struct inode *inode = folio_file_mapping(folio)->host;
 	struct nfs_page *head;
 	struct nfs_commit_info cinfo;
@@ -609,6 +614,7 @@ static int nfs_page_async_flush(struct folio *folio,
 				struct writeback_control *wbc,
 				struct nfs_pageio_descriptor *pgio)
 {
+	pr_info("%s: %p\n", __func__, folio);
 	struct nfs_page *req;
 	int ret = 0;
 
@@ -653,6 +659,7 @@ static int nfs_page_async_flush(struct folio *folio,
 static int nfs_do_writepage(struct folio *folio, struct writeback_control *wbc,
 			    struct nfs_pageio_descriptor *pgio)
 {
+	pr_info("%s: %p\n", __func__, folio);
 	nfs_pageio_cond_complete(pgio, folio_index(folio));
 	return nfs_page_async_flush(folio, wbc, pgio);
 }
@@ -681,6 +688,7 @@ static int nfs_writepages_callback(struct folio *folio,
 {
 	int ret;
 
+	pr_info("%s: %p\n", __func__, folio);
 	ret = nfs_do_writepage(folio, wbc, data);
 	if (ret != AOP_WRITEPAGE_ACTIVATE)
 		folio_unlock(folio);
